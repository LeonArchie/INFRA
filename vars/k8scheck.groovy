// vars/verifyKubernetesAccess.groovy

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É
 * –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
 * 1. –ü–æ–ª—É—á–∞–µ—Ç kubeconfig –∏–∑ Jenkins credentials
 * 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
 * 3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–ª–∞—Å—Ç–µ—Ä–æ–º
 * 4. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–¥
 * 5. –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 *
 * @param config Map —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
 *   - credentialsId: ID credentials –≤ Jenkins —Å kubeconfig (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'k8s_cluster_cred')
 */
def call(Map config = [:]) {
    // –ü–æ–ª—É—á–∞–µ–º ID credentials –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    def credentialsId = config.credentialsId ?: 'k8s_cluster_cred'
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Jenkins credentials –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è kubeconfig —Ñ–∞–π–ª–∞
    withCredentials([file(credentialsId: credentialsId, variable: 'KUBECONFIG_FILE')]) {
        // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)
        def safeWorkspace = env.WORKSPACE.replace(' ', '_')
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è KUBECONFIG
        env.KUBECONFIG = "${safeWorkspace}/.kube/config"
        
        // –°–æ–∑–¥–∞–µ–º .kube –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∫–æ–ø–∏—Ä—É–µ–º kubeconfig
        sh """
            mkdir -p "${safeWorkspace}/.kube"
            cp "${KUBECONFIG_FILE}" "${env.KUBECONFIG}"
            chmod 600 "${env.KUBECONFIG}"  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        """

        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
            echo "üîç Checking cluster connection..."
            def clusterInfo = sh(script: 'kubectl cluster-info', returnStdout: true).trim()
            echo "‚úÖ Cluster Info:\n${clusterInfo}"

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥ –∫–ª–∞—Å—Ç–µ—Ä–∞
            echo "üñ•Ô∏è Checking nodes..."
            def nodes = sh(
                script: 'kubectl get nodes -o wide --no-headers',  # –®–∏—Ä–æ–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
                returnStdout: true
            ).trim()
            echo "Active Nodes:\n${nodes}"

        } catch (Exception e) {
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            error "‚ùå Connection failed: ${e.getMessage()}"
        } finally {
            // –í—Å–µ–≥–¥–∞ –æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            sh "rm -rf ${safeWorkspace}/.kube || true"  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        }
    }
}