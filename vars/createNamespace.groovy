// vars/createNamespace.groovy

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–µ–π–º—Å–ø–µ–π—Å –≤ Kubernetes, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 * @param namespace –ò–º—è –Ω–µ–π–º—Å–ø–µ–π—Å–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
 * @param credentialsId ID credentials —Å kubeconfig (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @return –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
def call(Map config = [:]) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if (!config.namespace) {
        error "–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –Ω–µ–π–º—Å–ø–µ–π—Å–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä namespace)"
    }

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–µ–π–º—Å–ø–µ–π—Å–∞
        echo "üîç Checking if namespace ${config.namespace} exists..."
        def namespaceExists = sh(
            script: "kubectl get namespace ${config.namespace} >/dev/null 2>&1 && echo 'exists' || echo 'not_exists'",
            returnStdout: true
        ).trim()

        if (namespaceExists == 'not_exists') {
            echo "üÜï Creating namespace: ${config.namespace}"
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–µ–π–º—Å–ø–µ–π—Å —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            def createCmd = "kubectl create namespace ${config.namespace}"
            if (config.context) {
                createCmd += " --context=${config.context}"
            }
            
            sh(script: createCmd, returnStatus: true) // –ò—Å–ø–æ–ª—å–∑—É–µ–º returnStatus —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–π–º—Å–ø–µ–π—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
            def verify = sh(
                script: "kubectl get namespace ${config.namespace} >/dev/null 2>&1 && echo 'created' || echo 'failed'",
                returnStdout: true
            ).trim()
            
            if (verify == 'created') {
                echo "‚úÖ Namespace ${config.namespace} successfully created"
                return [status: 'CREATED', namespace: config.namespace]
            } else {
                error "‚ùå Failed to create namespace ${config.namespace} - check RBAC permissions"
            }
        } else {
            echo "‚ÑπÔ∏è Namespace ${config.namespace} already exists"
            return [status: 'EXISTS', namespace: config.namespace]
        }
    } catch (Exception e) {
        error "‚ùå Namespace operation failed: ${e.getMessage()}"
    }
}